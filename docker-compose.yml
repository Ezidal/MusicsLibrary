
services:
  postgres:
    image: postgres:16
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - app-network
    # volumes:
    #   - ./postgres_data:/var/lib/postgresql/data

  app:
    image: libmusic:latest
    container_name: app
    restart: always
    ports:
      - "${SERVER_PORT}:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_HOST: postgres
      EXTERNAL_API_URL: ${EXTERNAL_API_URL}
    networks:
      - app-network
    volumes:
      - ./migrations:/migrations
  pgadmin4:
    image: elestio/pgadmin:latest
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: sergeyefimov9593@gmail.com
      PGADMIN_DEFAULT_PASSWORD: test
      PGADMIN_LISTEN_PORT: 8080
    ports:
    - "12200:8080"
    volumes:
    - ./servers.json:/pgadmin4/servers.json
    networks:
    - app-network

networks:
  app-network: