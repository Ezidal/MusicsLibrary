basePath: /
definitions:
  models.PaginatedVerses:
    properties:
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
      verses:
        items:
          type: string
        type: array
    type: object
  models.Response:
    properties:
      error:
        type: string
      message:
        type: string
      status:
        type: integer
    type: object
  models.Song:
    properties:
      group:
        example: Muse
        type: string
      id:
        type: integer
      link:
        example: https://youtube.com/watch?v=...
        type: string
      releaseDate:
        example: "2006-07-16"
        type: string
      song:
        example: Supermassive Black Hole
        type: string
      text:
        example: Текст песни...
        type: string
    type: object
  models.SongRequest:
    properties:
      group:
        type: string
      song:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API для управления библиотекой песен
  title: Songs Library API
  version: "1.0"
paths:
  /songs:
    get:
      consumes:
      - application/json
      description: Возвращает список песен с возможностью фильтрации и пагинации
      parameters:
      - description: Фильтр по названию группы
        in: query
        name: group
        type: string
      - description: Фильтр по названию песни
        in: query
        name: song
        type: string
      - description: 'Фильтр по дате выпуска (формат: YYYY-MM-DD)'
        in: query
        name: releaseDate
        type: string
      - default: 1
        description: Номер страницы
        in: query
        name: page
        type: integer
      - default: 10
        description: Количество песен на странице
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Song'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Получить список песен
      tags:
      - songs
    post:
      consumes:
      - application/json
      description: Добавляет новую песню в библиотеку, используя данные из внешнего
        API
      parameters:
      - description: Данные для добавления песни
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SongRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Добавить новую песню
      tags:
      - songs
  /songs/{id}:
    delete:
      consumes:
      - application/json
      description: Удаляет песню из библиотеки по её ID
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Удалить песню
      tags:
      - songs
    put:
      consumes:
      - application/json
      description: Обновляет данные песни по её ID
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      - description: Данные для обновления песни
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Song'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Обновить данные песни
      tags:
      - songs
  /songs/{id}/text:
    get:
      consumes:
      - application/json
      description: Возвращает текст песни, разбитый на куплеты, с поддержкой пагинации
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      - default: 1
        description: Номер страницы
        in: query
        name: page
        type: integer
      - default: 2
        description: Количество куплетов на странице
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PaginatedVerses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Получить текст песни с пагинацией
      tags:
      - songs
swagger: "2.0"
